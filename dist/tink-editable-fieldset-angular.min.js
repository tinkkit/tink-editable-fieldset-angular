/*! tink-editable-fieldset-angular v0.1.0-beta.1 */
"use strict";!function(module){try{module=angular.module("tink.fieldset")}catch(e){module=angular.module("tink.fieldset",[])}module.directive("tinkFieldset",["safeApply","$timeout","$compile",function(safeApply,$timeout,$compile){return{restrict:"A",scope:{tinkFormEditable:"=?",tinkFormStatus:"=?"},compile:function(template){return{post:function(){},pre:function(scope,element){function setClassActive(cssClass,elem){safeApply(scope,function(){$timeout(function(){(activeElement===$(elem).get(0)||null===activeElement)&&($(element).removeClass(classToSetWhenOnHover),$(element).removeClass(classToSetWhenDefault),$(element).removeClass(classToSetWhenActive),$(element).removeClass(cssUneditableClass),$(element).addClass(cssClass),activeClass=cssClass,scope.tinkFormStatus=cssClass)},10)})}function specialElementsFix(element,enable){$(element).is("select")&&elementSelectFix(element,enable)}function elementSelectFix(element,enable){if(enable)element.css("display","block"),element.next().is("input")&&element.next().remove();else{element.css("display","none");var model=element.attr("ng-model")||element.attr("data-ng-model"),input=$('<input type="text" disabled ng-model="'+model+'"/>');input=$compile(input)(scope.$parent),input.insertAfter(element)}}function isDisabled(elem){var targetEl=$(elem),itIsDisabled=targetEl.attr("disabled")||targetEl.attr("data-disabled")||targetEl.attr("is-disabled")||targetEl.attr("data-is-disabled");return itIsDisabled?!0:!1}function mouseOverEvent(e){safeApply(scope,function(){activeClass===classToSetWhenActive||isDisabled(e.target)||(activeElement=$(e.target).get(0),setClassActive(classToSetWhenOnHover,$(e.target).get(0)))})}function mouseOutEvent(e){safeApply(scope,function(){activeClass===classToSetWhenActive||isDisabled(e.target)||setClassActive(classToSetWhenDefault,$(e.target).get(0))})}function focusEvent(e){safeApply(scope,function(){activeElement=$(e.target).get(0),setClassActive(classToSetWhenActive,$(e.target).get(0))})}function getElements(){var mouseElements=element.find("[ng-model], [data-ng-model]");return mouseElements}function addEventsToElements(){getElements().each(function(index,elem){scope.addEvents($(elem))})}var disabledReady=[],activeElement=null,classToSetWhenOnHover="mouseOver",classToSetWhenDefault="mouseOff",classToSetWhenActive="mouseFocus",cssUneditableClass="uneditable",activeClass="";setClassActive(classToSetWhenDefault),scope.formFocus=0,$(element).bind("mousedown",function(){safeApply(scope,function(){0===scope.formFocus&&$("body").bind("mousedown",function(e){$(element).get(0)!==$(e.target).get(0)&&0===$(element).find($(e.target)).length&&(scope.formFocus=0,$("body").unbind("mousedown"),activeElement=$(element).get(0),setClassActive(classToSetWhenDefault,$(element).get(0)))}),scope.formFocus=1})}),scope.$watch("tinkFormEditable",function(value){value?($(template).removeClass(cssUneditableClass),getElements().each(function(index,elem){-1===disabledReady.indexOf($(elem).get(0))&&safeApply(scope,function(){$(elem).isolateScope()&&($(elem).isolateScope().isDisabled=!1),$(elem).removeAttr("disabled"),specialElementsFix($(elem),!0)})})):($(template).addClass(cssUneditableClass),getElements().each(function(index,elem){safeApply(scope,function(){$(elem).isolateScope()&&($(elem).isolateScope().isDisabled=!0),$(elem).attr("disabled","true"),specialElementsFix($(elem),!1)})}))}),scope.addEvents=function(elem){$(elem).focusin(elem,focusEvent),$(elem).mouseover(elem,mouseOverEvent),$(elem).mouseout(elem,mouseOutEvent)},scope.removeEvents=function(elem){$(elem).unbind("mouseover mouseout focusin")},addEventsToElements()}}}}}])}();
//# sourceMappingURL=tink-editable-fieldset-angular.min.js.map